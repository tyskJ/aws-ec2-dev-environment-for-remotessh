# ╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║ EC2 Dev Environment For Remote SSH Stack - CloudFormation Template                                                                               ║
# ╚══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
AWSTemplateFormatVersion: "2010-09-09"
Description: "EC2 Dev Environment For Remote SSH Stack."
Transform:
  - "AWS::LanguageExtensions"

Metadata:
  AWS::Cloudformation::Interface:
    ParameterGroups:
      - Label:
          defalt: NW Settings.
        Parameters:
          - VpcCidr
          - PublicSubnet1aCidr
      - Lablel:
          default: EC2 Settings.
        Parameters:
          - LatestAmiId
          - InstanceType
          - RootVolumeSize

# ╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║ EC2 Dev Environment For Remote SSH Stack - CloudFormation Template Parameters                                                                    ║
# ╠═══════════════════════════════════════╤═════════════════════════════════════════════════╤════════════════════════════════════════════════════════╣
# ║ VpcCidr                               │ String                                          │ VPC Cidr.                                              ║
# ║ PublicSubnet1aCidr                    │ String                                          │ Public Subnet AZ-A Cidr.                               ║
# ║ LatestAmiId                           │ AWS::SSM::Parameter::Value<AWS::EC2::Image::Id> │ Latest Amazon Linux 2023 Ami ID.                       ║
# ║ InstanceType                          │ String                                          │ Instance Type.                                         ║
# ║ RootVolumeSize                        │ Number                                          │ RootVolumeSize.                                        ║
# ╚═══════════════════════════════════════╧═════════════════════════════════════════════════╧════════════════════════════════════════════════════════╝
Parameters:
  VpcCidr:
    Description: VPC Cidr
    Type: String

  PublicSubnet1aCidr:
    Description: Public Subnet AZ-A Cidr
    Type: String

  LatestAmiId:
    Description: Latest Amazon Linux 2023 AMI ID.
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64

  InstanceType:
    Description: EC2 Instance Type.
    Type: String

  RootVolumeSize:
    Description: EC2 Instance Root Volume Size.
    Type: Number

# ╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║ EC2 Dev Environment For Remote SSH Stack - CloudFormation Template Mappings                                                                      ║
# ╠═════════════════════╤════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
# ║ VpcParams           │ VPC Paramters.                                                                                                             ║
# ║ IgwParams           │ Internet Gateway Paramters.                                                                                                ║
# ║ SubnetParams        │ Subnet Paramters.                                                                                                          ║
# ║ NaclParams          │ NACL Paramters.                                                                                                            ║
# ║ RtbParams           │ RouteTable Paramters.                                                                                                      ║
# ║ IamParams           │ IAM Paramters.                                                                                                             ║
# ║ SgParams            │ SecurityGroup Paramters.                                                                                                   ║
# ║ EpParams            │ VPC Interface Endpoint Paramters.                                                                                          ║
# ║ KeyPairParams       │ KeyPair Paramters.                                                                                                         ║
# ║ Ec2Params           │ EC2 Instance Paramters.                                                                                                    ║
# ╚═════════════════════╧════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
Mappings:
  VpcParams:
    VpcType:
      Name: dev-vpc
      DnsHost: true
      DnsSupport: true
      Cidr: VpcCidr
  IgwParams:
    IgwType:
      Name: dev-igw
  SubnetParams:
    PublicSubnet1a:
      Name: dev-public-subnet-a
      Cidr: PublicSubnet1aCidr
  NaclParams:
    NaclType:
      Name: dev-nacl
    Association:
      AssocSubnet1: PublicSubnet1a
  RtbParams:
    RtbType:
      RtbPublic: dev-public-rtb
    PublicAssociation:
      RtbAssocPublicSubnet1: PublicSubnet1a
  IamParams:
    IamType:
      Description: IAM Role for EC2 Instance.
      Name: dev-iam-role-ec2
    SsmPolicy:
      Description: IAM Policy for SSM Start SSH Session.
      Name: dev-iam-policy-ssm-ssh
    SsmGrp:
      Name: dev-iam-grp-ssm
      MngPolicy: SsmIamPolicy
    SsmUser:
      Name: dev-iam-user-ssm
      GrpName: IamGrp
  SgParams:
    SgType:
      Description: SG for EC2
      Ec2Sg: dev-ec2-sg
  KeyPairParams:
    KeyPairType:
      Name: dev-keypair
  Ec2Params:
    Instance1:
      DeviceName: /dev/xvda
      RootVolumeSize: RootVolumeSize
      AmiId: LatestAmiId
      InstanceType: InstanceType
      KeyPairName: KeyPair
      SgName: Ec2Sg
      SubnetName: PublicSubnet1a
      Name: dev-ec2-instance
  SecretsParams:
    Secret1:
      Name: dev-secrets-manager-credentials

# ╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║ EC2 Dev Environment For Remote SSH Stack - CloudFormation Template Resources                                                                     ║
# ╠═════════════════════════════════════╤═══════════════════════════════════════════╤════════════════════════════════════════════════════════════════╣
# ║ Vpc                                 │ AWS::EC2::VPC                             │ VPC.                                                           ║
# ║ Igw                                 │ AWS::EC2::InternetGateway                 │ InternetGateway.                                               ║
# ║ IgwAttach                           │ AWS::EC2::VPCGatewayAttachment            │ InternetGateway Attachment.                                    ║
# ║ PublicSubnet1a                      │ AWS::EC2::Subnet                          │ Public Subnet AZ-A.                                            ║
# ║ Nacl                                │ AWS::EC2::NetworkAcl                      │ All Allow NACL.                                                ║
# ║ NaclInEntry100                      │ AWS::EC2::NetworkAclEntry                 │ All Allow Inbound Entry.                                       ║
# ║ NaclOutEntry100                     │ AWS::EC2::NetworkAclEntry                 │ All Allow Outbound Entry.                                      ║
# ║ AssocSubnet1                        │ AWS::EC2::SubnetNetworkAclAssociation     │ NACL Association.                                              ║
# ║ RtbPublic                           │ AWS::EC2::RouteTable                      │ Public Subnet RouteTable.                                      ║
# ║ RtbPublicEntry1                     │ AWS::EC2::Route                           │ RouteTable Entry 1.                                            ║
# ║ RtbAssocPublicSubnet1               │ AWS::EC2::SubnetRouteTableAssociation     │ RouteTable Association Public Subnet.                          ║
# ║ S3GwEp                              │ AWS::EC2::VPCEndpoint                     │ S3 Gateway Endpoint.                                           ║
# ║ Role                                │ AWS::IAM::Role                            │ EC2 IAM Role.                                                  ║
# ║ InstanceProfile                     │ AWS::IAM::InstanceProfile                 │ EC2 IAM InstanceProfile.                                       ║
# ║ Ec2Sg                               │ AWS::EC2::SecurityGroup                   │ EC2 SecurityGroup.                                             ║
# ║ KeyPair                             │ AWS::EC2::KeyPair                         │ KeyPair.                                                       ║
# ║ Ec2Instance                         │ AWS::EC2::Instance                        │ EC2 Instance.                                                  ║
# ║ SsmIamPolicy                        │ AWS::IAM::ManagedPolicy                   │ IAM Policy for Start SSH Session.                              ║
# ║ IamGrp                              │ AWS::IAM::Group                           │ IAM Group for ssm user.                                        ║
# ║ SsmIamUser                          │ AWS::IAM::User                            │ IAM User for ssm. (not access console)                         ║
# ║ Accesskey                           │ AWS::IAM::AccessKey                       │ AccessKeyID and SecretAccessKey.                               ║
# ║ Secrets                             │ AWS::SecretsManager::Secret               │ Secrets for AccessKeyID and SecretAccessKey.                   ║
# ╚═════════════════════════════════════╧═══════════════════════════════════════════╧════════════════════════════════════════════════════════════════╝
Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref
        "Fn::FindInMap": [VpcParams, VpcType, Cidr]
      EnableDnsHostnames: !FindInMap [VpcParams, VpcType, DnsHost]
      EnableDnsSupport: !FindInMap [VpcParams, VpcType, DnsSupport]
      Tags:
        - Key: Name
          Value: !FindInMap [VpcParams, VpcType, Name]

  Igw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !FindInMap [IgwParams, IgwType, Name]

  IgwAttach:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref Igw

  PublicSubnet1a:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Sub ${AWS::Region}a
      CidrBlock: !Ref
        "Fn::FindInMap": [SubnetParams, PublicSubnet1a, Cidr]
      MapPublicIpOnLaunch: true
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !FindInMap [SubnetParams, PublicSubnet1a, Name]

  Nacl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !FindInMap [NaclParams, NaclType, Name]

  NaclInEntry100:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      Egress: false
      NetworkAclId: !Ref Nacl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock: 0.0.0.0/0

  NaclOutEntry100:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      Egress: true
      NetworkAclId: !Ref Nacl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock: 0.0.0.0/0

  AssocSubnet1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref Nacl
      SubnetId: !Ref PublicSubnet1a

  RtbPublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !FindInMap [RtbParams, RtbType, RtbPublic]

  RtbPublicEntry1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RtbPublic
      GatewayId: !Ref Igw
      DestinationCidrBlock: 0.0.0.0/0

  RtbAssocPublicSubnet1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RtbPublic
      SubnetId: !Ref PublicSubnet1a

  S3GwEp:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcEndpointType: Gateway
      VpcId: !Ref Vpc
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      RouteTableIds:
        - !Ref RtbPublic

  Role:
    Type: AWS::IAM::Role
    Properties:
      Description: !FindInMap [IamParams, IamType, Description]
      RoleName: !FindInMap [IamParams, IamType, Name]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore"
      Tags:
        - Key: Name
          Value: !FindInMap [IamParams, IamType, Name]

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !FindInMap [IamParams, IamType, Name]
      Roles:
        - !Ref Role

  Ec2Sg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !FindInMap [SgParams, SgType, Description]
      GroupName: !FindInMap [SgParams, SgType, Ec2Sg]
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !FindInMap [SgParams, SgType, Ec2Sg]

  KeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyFormat: pem
      KeyType: rsa
      KeyName: !FindInMap [KeyPairParams, KeyPairType, Name]
      Tags:
        - Key: Name
          Value: !FindInMap [KeyPairParams, KeyPairType, Name]

  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings:
        - DeviceName: !FindInMap [Ec2Params, Instance1, DeviceName]
          Ebs:
            DeleteOnTermination: true
            Encrypted: true
            VolumeSize: !Ref
              "Fn::FindInMap": [Ec2Params, Instance1, RootVolumeSize]
            VolumeType: gp3
      DisableApiTermination: false
      EbsOptimized: false
      IamInstanceProfile: !Ref InstanceProfile
      ImageId: !Ref
        "Fn::FindInMap": [Ec2Params, Instance1, AmiId]
      InstanceType: !Ref
        "Fn::FindInMap": [Ec2Params, Instance1, InstanceType]
      KeyName: !Ref
        "Fn::FindInMap": [Ec2Params, Instance1, KeyPairName]
      SecurityGroupIds:
        - !Ref
          "Fn::FindInMap": [Ec2Params, Instance1, SgName]
      SubnetId: !Ref
        "Fn::FindInMap": [Ec2Params, Instance1, SubnetName]
      Tags:
        - Key: Name
          Value: !FindInMap [Ec2Params, Instance1, Name]

  SsmIamPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: !FindInMap [IamParams, SsmPolicy, Description]
      ManagedPolicyName: !FindInMap [IamParams, SsmPolicy, Name]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowEC2StartStop
            Effect: Allow
            Action:
              - ec2:StartInstances
              - ec2:StopInstances
            Resource:
              - !Sub "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:instance/${Ec2Instance}"
          - Sid: AllowStartSession
            Effect: Allow
            Action:
              - ssm:StartSession
            Resource:
              - !Sub "arn:${AWS::Partition}:ec2:${AWS::Region}:${AWS::AccountId}:instance/${Ec2Instance}"
              - !Sub "arn:${AWS::Partition}:ssm:::document/AWS-StartSSHSession"

  IamGrp:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !FindInMap [IamParams, SsmGrp, Name]
      ManagedPolicyArns:
        - !Ref
          "Fn::FindInMap": [IamParams, SsmGrp, MngPolicy]

  SsmIamUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !FindInMap [IamParams, SsmUser, Name]
      Groups:
        - !Ref
          "Fn::FindInMap": [IamParams, SsmUser, GrpName]
      Tags:
        - Key: Name
          Value: !FindInMap [IamParams, SsmUser, Name]

  Accesskey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref SsmIamUser

  Secrets:
    Type: AWS::SecretsManager::Secret
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Name: !FindInMap [SecretsParams, Secret1, Name]
      SecretString: !Sub '{"AccessKeyId": "${Accesskey}", "SecretAccessKey": "${Accesskey.SecretAccessKey}"}'

# ╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║ EC2 Dev Environment For Remote SSH Stack - CloudFormation Template Outputs                                                                       ║
# ╠═══════════════════════════╤══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣
# ║ GetKeyPairCommand         │ Get KeyPair Secret Key from SSM Parameter Store.                                                                     ║
# ║ GetAccessKeyCommand       │ Get KeyPair Secret Key from Secrets Manager.                                                                         ║
# ╚═══════════════════════════╧══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
Outputs:
  GetKeyPairCommand:
    Description: Get KeyPair Secret Key from SSM Parameter Store.
    Value: !Sub 'aws ssm get-parameter --name "/ec2/keypair/${KeyPair.KeyPairId}:1" --region ${AWS::Region} --with-decryption --query Parameter.Value --output text --profile admin > keypair.pem && chmod 400 keypair.pem'
    Export:
      Name: get-keypair-command

  GetAccessKeyCommand:
    Description: Get KeyPair Secret Key from Secrets Manager.
    Value: !Sub "aws secretsmanager get-secret-value --secret-id ${Secrets.Id} --profile admin"
    Export:
      Name: get-accesskey-commnad
